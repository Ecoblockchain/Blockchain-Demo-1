@model BlockChainWebApplication.Models.User

@{
    ViewBag.Title = "Edit Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section JavaScript{
    <script type="text/javascript">$(document).ready(function () { WebApp.Core.HighlightCurrentMenuItem('Users') });</script>
    <script src="~/Assets/plugins/bootstrap-toggle/bootstrap-toggle.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@section CSS{
    <link href="~/Assets/plugins/bootstrap-toggle/bootstrap-toggle.min.css" rel="stylesheet" />
}


<div class="page-header">
    <div class="page-header-content">
        <div class="page-title">
            <h4><span class="text-semibold">Edit Profile</span></h4>
        </div>
        <div class="heading-elements">
            <div class="heading-btn-group">
            </div>
        </div>
    </div>

</div>
<div class="content">
    <form method="post" class="form-horizontal" action="" enctype="multipart/form-data">
        <div class="panel panel-flat">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            <label class="col-lg-3 control-label">@Html.DisplayNameFor(model => model.Username):</label>
                            <div class="col-lg-7">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @placeholder = "Please enter the Username", @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">@Html.DisplayNameFor(model => model.NickName):</label>
                            <div class="col-lg-7">
                                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @placeholder = "Please enter the Nick Name", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">@Html.DisplayNameFor(model => model.Email):</label>
                            <div class="col-lg-7">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @placeholder = "Please enter the Email", @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">Gender:</label>
                            <div class="col-md-7">
                                <select name="Gender" id="Status" class="form-control select">
                                    <option value="" @(Model.Gender == "" ? "selected" : string.Empty)>--Select--</option>
                                    <option value="Male" @(Model.Gender == "Male" ? "selected" : string.Empty)>Male</option>
                                    <option value="Female" @(Model.Gender == "Female" ? "selected" : string.Empty)>Female</option>
                                    <option value="Other" @(Model.Gender == "Other" ? "selected" : string.Empty)>Other</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">@Html.DisplayNameFor(model => model.Phone):</label>
                            <div class="col-lg-7">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @placeholder = "Please enter the Phone", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">@Html.DisplayNameFor(model => model.Criteria):</label>
                            <div class="col-md-7 criteriaDiv">
                                <select name="Criteria" id="Criteria" class="form-control select Criteria">
                                    <option value="" @(Model.Criteria == "" ? "selected" : string.Empty)>--Select--</option>
                                    <option value="<=" @(Model.Criteria == "<=" ? "selected" : string.Empty)>Less than or equal to</option>
                                    <option value=">=" @(Model.Criteria == ">=" ? "selected" : string.Empty)>Greater than or equal to</option>
                                    <option value="=" @(Model.Criteria == "=" ? "selected" : string.Empty)>Equal to</option>
                                </select>
                            </div>
                        </div>
                        @{
                            if (Model.Criteria != null)
                            {
                                <div class="form-group CriteriaValueDiv" id="CriteriaValueDiv">
                                    <label class="col-lg-3 control-label">@Html.DisplayNameFor(model => model.CriteriaValue):</label>
                                    <div class="col-lg-7">
                                        @Html.EditorFor(model => model.CriteriaValue, new { htmlAttributes = new { @placeholder = "Please enter the Criteria Value", @class = "form-control", data_val = true, data_val_required = "Please enter a value for Criteria Value" } })
                                        @Html.ValidationMessageFor(model => model.CriteriaValue, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="form-group hidden CriteriaValueDiv" id="CriteriaValueDiv">
                                    <label class="col-lg-3 control-label">@Html.DisplayNameFor(model => model.CriteriaValue):</label>
                                    <div class="col-lg-7">
                                        @Html.EditorFor(model => model.CriteriaValue, new { htmlAttributes = new { @placeholder = "Please enter the Criteria Value", @class = "form-control"} })
                                        @Html.ValidationMessageFor(model => model.CriteriaValue, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                        }


                        <div class="form-group">
                            <label class="col-lg-3 control-label">@Html.DisplayNameFor(model => model.IsSearchable)</label>
                            <div class="col-lg-3">
                                @Html.EditorFor(model => model.IsSearchable, new { htmlAttributes = new { @class = "form-control toggle-switch" } })
                                @Html.ValidationMessageFor(model => model.IsSearchable, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr>
                <div class="text-right">
                    <a href="/default/edit/@Model.ID" class="btn btn-default">Reset<i class="icon-reload-alt position-right"></i> </a>
                    <button type="submit" class="btn btn-primary">Submit <i class="icon-arrow-right14 position-right"></i></button>
                </div>
            </div>
        </div>
    </form>

</div>